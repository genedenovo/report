package GDHR::DEBUG;
#------------------------------------------------+
#    [APM] This moudle is generated by amp.pl    |
#    [APM] Creat time: 2013-05-13 09:47:42       |
#------------------------------------------------+
=pod

=head1 Name

SBV::DEBUG => debug routines for GDHR

=head1 Synopsis

This module is not meant to be used directly

=head1 Feedback

Author: Peng Ai
Email:  aipeng0520@163.com

=head1 Version

Version history

=head2 v1.0

Date: 2013-05-13 09:47:42

=head2 v1.1

Date: 01/13/2016 09:34:02 AM
Change: modified for GDHR

=cut


use strict;
use warnings;

require Exporter;
our @ISA = qw(Exporter);
our @EXPORT    = qw(timeLOG LOG WARN ERROR vital_warn);

use FindBin;
use Carp qw(carp confess croak);

sub timeLOG
{
	my $timeH = "[" . ftime() . "]";
	print "$timeH @_\n";
}

sub LOG
{
	print "@_\n";
}

sub WARN
{
	carp "WARN: @_\n";
}

sub vital_warn
{
	print STDERR "VITAL WARN: @_\n";
}

sub ERROR
{
	my $ename = shift;
	confess "FATAL ERROR: $ename, [@_]\n";
}

sub ftime
{
	my ($sec,$min,$hour,$day,$mon,$year,$wday,$yday,$isdst)=localtime();
	$year += 1900;
	$mon += 1;
	 
	my $ftime = sprintf("%d\-%02d\-%02d %02d:%02d:%02d",$year,$mon,$day,$hour,$min,$sec);
	return $ftime;
}
