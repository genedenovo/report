package GDHR::HTML;
#-------------------------------------------------+
#    [APM] This moudle was generated by amp.pl    |
#    [APM] Created time: 2016-01-13 11:36:57      |
#-------------------------------------------------+
=pod

=head2 v1.0

Date: 2016-01-13 11:36:57

=head1 Name

HTML -- used to edit the content report html file 

=head1 Synopsis

This module is not meant to be used directly

=head1 Feedback

Author: Peng Ai
Email:  aipeng0520@163.com

=head1 Version

Version history

=cut


use strict;
use warnings;

require Exporter;
our @ISA = qw(Exporter);

use File::Basename qw/basename/;

use lib "$ENV{GDHR_PATH}/lib";
use GDHR::DEBUG;

sub section
{
	my ($class,%opts) = @_;
	$opts{'class'} ||= "normal_cont";
	
	my $hash = {};
	my $attrs = opts2attrs(%opts);
	
	$hash->{head} = <<HTML;
<section $attrs>
HTML

	$hash->{tail} = "</section>\n";
	$hash->{main} = "";
	
	bless $hash , $class;
	return $hash;
}

sub menu
{
	my ($class,$str,%opts) = @_;
	
	my $attrs = opts2attrs(%opts);
	my $html = qq(<h3 $attrs>$str</h3>\n);
	
	$class->add_html($html);
}

sub submenu
{
	my ($class,$str,%opts) = @_;

	my $attrs = opts2attrs(%opts);
	my $html = qq(<h5 $attrs>$str</h5>\n);
	$class->add_html($html);
}

sub desc
{
	my ($class,$str,%opts) = @_;

	my $attrs = opts2attrs(%opts);
	my $html = qq(<p $attrs>$str</p>\n);
}

sub files2list
{
	my ($class,%opts) = @_;
	
	my $files = $opts{'-files'} or ERROR("-files must be defined in function <files2list>");
	my $desc = $opts{'-desc'} or ERROR("-desc must be defined in function <files2list>");
	my @fnames = map { basename($_) } @$files;

	my @lies = map { qq(<li>$desc->[$_]: <a href="$files->[$_]" target="_blank">$fnames[$_]</a></li>) } 0 .. $#$files;
	my $li = join "\n" , @lies;

	my $html = <<HTML;
<ul>
$li
</ul>
HTML

	$class->add_html($html);
}

sub matrix2html
{
	
}

sub tsv2html
{
	my ($class,%opts) = @_;
	
	# parse the options
	my $top = $opts{top} || 10;
	my $name = $opts{'-name'} or ERROR("-name must be defined in function <tsv2html>");
	$opts{header} = 1 if (! defined $opts{header});
	my $file = $opts{'-file'} or ERROR("-file must be defined in function <tsv2html>");
	
	my $tab = "";
	open IN,$file or die "$file $!";
	
	if ($opts{header})
	{
		my $header = <IN>;
		my @values = split /\t/,$header;
		chomp $values[-1];
		@values = map {
			my $len = length $_;
			if ($opts{'-max_chars'} &&  $len - 4 > $opts{'-max_chars'} )
			{
				qq(<th class="abbrTab" data=$opts{'-max_chars'}>$_</th>);
			}
			else 
			{
				"<th>$_</th>"
			}
		} @values;
		
		$tab .= "<tr>" . ${ [ join "",@values ]}[0] . "</tr>\n"
	}
	
	my $i = 0;
	while(<IN>)
	{
		$i ++;
		last if $i > $top;

		my @values = split /\t/;
		chomp $values[$#values];

		@values = map {
			my $len = length $_;
			if ($opts{'-max_chars'} &&  $len - 4 > $opts{'-max_chars'} )
			{
				qq(<td class="abbrTab" data=$opts{'-max_chars'}>$_</td>);
			}
			else 
			{
				"<td>$_</td>";
			}
		} @values;

		$tab .= "<tr>" . ${ [ join "",@values ]}[0] . "</tr>\n";
	}
	close IN;

	my $help_doc = $opts{'-help'} ? qq(<a href="doc/seq_stat.html#$opts{'-help'}" target="help_page" onclick="show_help();"><img src="image/help.png" class="help_logo"></a>) : "";

	my $tab_html = <<HTML;
<table class="hl_table">
	<caption>$name$help_doc</caption>
	$tab 
</table>
HTML
	
	$class->add_html($tab_html);
}

# add one image to the html 
sub img2html
{
	my ($class,%opts) = @_;
	
	my $dir = $opts{'-file'} or ERROR("-file must be defined in function <img2html>");
	my $name = $opts{'-name'} or ERROR("-name must be defined in function <img2html>");

	my $html;
	if ($opts{'-desc'})
	{
		$html = <<HTML;
<table class="pic_table">
	<tr>
		<td style="width: 50%"><a href="$dir" target="_blank"><img src="$dir" /></td>
		<td class="pic_table_desc" style="width: 50%"><p>$opts{'-desc'}</p></td>
	</tr>
	<tr>
		<td>$name</td>
		<td></td>
	</tr>
</table>
HTML
		
	}
	else 
	{
		$html = <<HTML;
<table class="pic_table">
	<tr>
		<td style="width: 50%"><a href="$dir" target="_blank"><img src="$dir" /></td>
	</tr>
	<tr>
		<td>$name</td>
	</tr>
</table>
HTML
	}
	
	$class->add_html($html);
}

# add two images to the html
sub img2html2
{
	my ($class,%opts) = @_;

	my $file1 = $opts{'-file1'} or ERROR("-file1 must be defined in function <img2html>");
	my $name1 = $opts{'-name1'} or ERROR("-name1 must be defined in function <img2html>");
	my $file2 = $opts{'-file2'} or ERROR("-file2 must be defined in function <img2html>");
	my $name2 = $opts{'-name2'} or ERROR("-name2 must be defined in function <img2html>");
	
	my $desc1 = $opts{'-desc1'} || "";
	my $desc2 = $opts{'-desc2'} || "";
	
	if ($desc1)
	{
		$name1 .= "<br />$desc1";
	}

	if ($desc2)
	{
		$name2 .= "<br />$desc2";
	}

	my $html = <<HTML;
<table class="pic_table">
	<tr>
		<td style="width: 50%"><a href="$file1" target="_blank"><img src="$file1" /></a></td>
		<td style="width: 50%"><a href="$file2" target="_blank"><img src="$file2" /></a></td>
	</tr>
	<tr>
		<td>$name1</td>
		<td>$name2</td>
	</tr>
</table>
HTML

	$class->add_html($html);
}

# add multi images to the html 
sub imgs2html
{
	my ($class,%opts) = @_;

	my $images = $opts{'-files'} or ERROR("-files must be defined in function <imgs2html>");
	my $names = $opts{'-names'} or ERROR("-names must be defined in function <imgs2html>");
	my $resp_tabs_cnt = $opts{'-id'} or ERROR("-id must be defined in function <imgs2html>");

	ERROR("the number of names is not equal to the number of images") unless $#$names == $#$images;

	my $names_li = "";
	foreach (@$names)
	{
		$names_li .= <<TEMP;
		<li>$_</li>
TEMP
	}
	
	my $images_div = "";
	my $i = 0;
	foreach (@$images)
	{
		if ($opts{'-desc'})
		{
			$images_div .= <<TEMP;
		<div>
			<div height="80%"><a href="$_" target="_blank"><img src="$_" /></a></div>
			<div height="20%"><p>$opts{'-desc'}->[$i]</p></div>
		</div>
TEMP
		}
		else 
		{
			$images_div .= <<TEMP;
		<div>
			<a href="$_" target="_blank"><img src="$_" /></a>
		</div>
TEMP
		}
		$i ++;
	}

	my $html = <<HTML;
<div id="parentVerticalTab$resp_tabs_cnt" class="VerticalTab">
	<ul id="resp-tabs-list$resp_tabs_cnt" class="resp-tabs-list hor_$resp_tabs_cnt">
$names_li
	</ul>
	<div id="resp-tabs-container$resp_tabs_cnt" class="resp-tabs-container hor_$resp_tabs_cnt">
$images_div
	</div>
</div>
HTML
	$class->add_html($html);
}

sub innerHTML 
{
	my $class = shift;
	my $html = $class->{head} . $class->{main} . $class->{tail};
	return $html;
}

sub add_html
{
	my $class = shift;
	my $str = shift;
	
	my $main = $class->{main};
	$main .= $str;
	
	$class->{main} = $main;
}

sub opts2attrs
{
	my %opts = @_;
	
	my @attrs = map {
		my $name = $_;
		my $val = $opts{$name};
		
		if (substr($name,0,1) eq "-")
		{
			$name = substr($name,1);
		}
		
		if ($val =~ /^\d+$/)
		{
			"$name=$val";
		}
		else 
		{
			qq($name="$val")
		}
	} keys %opts;
	
	my $attrs = join " " , @attrs;
	
	return $attrs;
}
