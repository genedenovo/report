package GDHR;
#-------------------------------------------------+
#    [APM] This moudle was generated by amp.pl    |
#    [APM] Created time: 2016-01-13 08:53:56      |
#-------------------------------------------------+
=pod

=head1 Name

GDHR -- GeneDenovo HTML Report moudle

=head1 Synopsis

This module is not meant to be used directly

=head1 Feedback

Author: Peng Ai
Email:  aipeng0520@163.com

=head1 Version

Version history

=head2 v1.0

Date: 2016-01-13 08:53:56

=head2 v1.1

Date: 01/20/2016 02:20:57 PM
Update: add the packaged section, like seq_stat, pathway enrich, annotation etc.

=head2 v1.2 

Date: 03/28/2016 03:45:00 PM
Update: fix the bug of desc which can't work

=head2 v1.2.6

Date: 2017/06/05
Update: set the order of func_table to default 

=cut

use strict;
use warnings;

use GDHR::DEBUG;
use GDHR::HTML;
use File::Basename qw/basename dirname/;

require Exporter;
our @ISA = qw(Exporter);

sub new 
{
	my ($class,%opts) = @_;
	
	# check the ENV
	my $root = $ENV{'GDHR_PATH'} or die "GDHR_PATH is not defined in your ENV!";
	
	my $report = {};
	$report->{path}->{root} = $root;
	
	bless $report , $class;

	# init the report dir 
	$report->init_report(%opts);
	
	return $report;
}

sub init_report
{
	my ($class,%opts) = @_;
	
	# create the outdir 
	my $outdir = $opts{'-outdir'} || ".";
	mkdir $outdir unless -d $outdir;
	$class->{path}->{outdir} = $outdir;
	
	# the public vars
	$class->{resp_tabs_cnt} = 1;
	$class->{menu_cnt} = 0;
	$class->{submenu_cnt} = 0;
	$class->{img_cnt} = 0;
	$class->{tab_cnt} = 0;
	$class->{brief} = {};

	# the report 's pipe type
	my $pipe = $opts{'-pipe'} || "补充";
	$class->{pipe} = $pipe;
	
	# the main index name 
	my $name = $opts{'-name'} || "index";
	$class->{name} = $name;

	# copy the config files to outdir
	$class->cp_conf_files();
	
	# create the main html file
	$class->init_index_html();
	$class->init_main_html();
}

sub cp_conf_files
{
	my $class = shift;
	
	my $outdir = $class->{path}->{outdir};
	my $root = $class->{path}->{root};
	my $conf_dir = "$root/conf";
	
	mkdir "$outdir/src" unless -d "$outdir/src";

	system("cp -r $conf_dir/* $outdir/src");
	timeLOG("init the config done ... ");
}

sub init_index_html
{
	my $class = shift;
	my $pipe = $class->{pipe};
	my $outdir = $class->{path}->{outdir};
	
	my $html = <<HTML;
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
	<head>
		<!-- 基本信息 -->
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
		<title>基迪奥生物 结题报告</title>
		
		<!-- CSS文档 -->
		<link rel="stylesheet" type="text/css" href="src/css/index.css" />
		
		<!-- JS脚本 -->
		<script src="src/js/jquery-1.9.1-min.js"></script>
	</head>
	<body>
		<!-- 结题报告页眉 -->
		<section>
			<div id="header_banner">
				<div id="banner_logo"></div>
				<div id="banner_title">基迪奥生物 <span> $pipe分析 </span> 结题报告</div>
				<div id="banner_bg_image"></div>
			</div>
		</section>
		
		<!-- 结题报告主内容 -->
		<section>
			<iframe id="iframepage" src="src/content.html"></iframe>
		</section>
		
		<!-- JS脚本初始化 -->
		<script language="javascript">
			function frameresize(){
				var iframeheight = \$(window).height();
				\$('#iframepage').css('height', iframeheight - 85 + 'px');
			};
			if(window.attachEvent){
				document.getElementById("iframepage").attachEvent('onload', frameresize);
			}
			else{
				document.getElementById("iframepage").addEventListener('load', frameresize, false);
			} 
			\$(window).resize(frameresize);
			frameresize();
		</script>
	</body>
</html>
HTML
	
	open OUT , ">" , "$outdir/index.html" or die $!;
	print OUT $html;
	close OUT;
	timeLOG("The index html report 'content.html' was create done :)");
}

sub init_main_html
{
	my $class = shift;

	my $html = "";
	$class->{html} = $html;
}

sub section
{
	my ($class,%opts) = @_;
	my $section = GDHR::HTML->section($class,%opts);
	
	push @{$class->{section}} , $section;
	return $section;
}

sub write
{
	my ($class,%opts) = @_;
	
	my $outdir = $class->{path}->{outdir};
	
	my $head = $class->main_html_head();
	my $tail = $class->main_html_tail();
	
	my $html = $class->{html};
	foreach my$section (@{$class->{section}})
	{
		$html .= $section->innerHTML;
	}
	
	open OUT , ">" , "$outdir/src/content.html";
	print OUT $head;
	print OUT $html;
	print OUT $tail;
	close OUT;
	
	timeLOG("The content html report 'content.html' was create done :)");
}

# pack the report folder, this function will use the pack cmd of system, so just for Linux now.
# support pack format: gz, bz2, zip, rar
sub pack
{
	my ($class,%opts) = @_;
	
	my $outdir = $class->{path}->{outdir};
	chop $outdir if ($outdir =~ /\/$/);
	
	my $out_name = basename($outdir);
	my $out_dir = dirname($outdir);

	my $format = $opts{'-format'} || "bz2";
	
	my $cmd = "";
	if ($format eq "bz2")
	{
		$cmd = "cd $out_dir; tar -h -cjf $out_name.tar.bz2 $out_name";
	}
	elsif ($format eq "gz")
	{
		$cmd = "cd $out_dir; tar -h -czf $out_name.tar.gz $out_name";
	}
	elsif ($format eq "zip")
	{
		$cmd = "cd $out_dir; zip -r $out_name.zip $out_name";
	}
	elsif ($format eq "rar")
	{
		$cmd = "cd $out_dir; rar a -r $out_name.rar $out_name";
	}
	else 
	{
		ERROR("pack format error, now just support format: gz, bz2, zip, rar.",$format);
	}
	
	system("$cmd 1>/dev/null");
	timeLOG("The html report has been packed :)");
}

sub main_html_head
{	
	my $head = <<HTML;
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
	<head>
		<!-- 基本信息 -->
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
		<title>基迪奥生物 结题报告</title>
		
		<!-- CSS文档 -->
		<link rel="stylesheet" type="text/css" href="css/jquery.dataTables.min.css" />
		<link rel="stylesheet" type="text/css" href="css/report.css" />
		<link rel="stylesheet" type="text/css" href="css/jumpto.css" />
		<link rel="stylesheet" type="text/css" href="css/easy-responsive-tabs.css" />

		<!-- JS脚本 -->
		<script src="js/jquery-1.9.1-min.js"></script>
		<script src="js/modernizr-min.js"></script>
		<script src="js/jquery.jumpto-min.js"></script>
		<script src="js/jquery.nicescroll-min.js"></script>
		<script src="js/easyResponsiveTabs-min.js"></script>
		<script src="js/show_help-min.js"></script>
		<script src="js/jquery.dataTables.min.js"></script>

	</head>
	<body>
		<div id="report_body">
HTML
	return $head;
}

sub main_html_tail
{
	my $class = shift;
	my $tail = <<HTML;
		</div>
		
		<div id="goTop" style="display:none;">
			<a title="返回顶部" class="backtotop">
				<img class="back-top" src="image/goTop.jpg">
			</a>
		</div>
		
		<!-- 帮助文档窗口 -->
		<div id="show_help">
			<h3>帮助文档</h3>
			<iframe id="help_page" name="help_page" src="http://www.genedenovo.com/"></iframe>
		</div>
		
		<!-- JS插件初始化 -->
		<script type="text/javascript">
			\$(document).ready(function() {
				
				\$("#report_body").jumpto({
					innerWrapper: "section",
					firstLevel: "> h3",
					secondLevel: "> h5",
					offset: 0,
					anchorTopPadding: 0,
					animate: 600,
					showTitle: "目录",
					closeButton: false
				});
				for (var i = 1; i <= $class->{resp_tabs_cnt}; i++){
					\$('#resp-tabs-list' + i).niceScroll({cursoropacitymax:0.5,cursorwidth:"8px"});
					\$('#resp-tabs-container' + i).niceScroll({cursoropacitymax:0.5,cursorwidth:"8px"});
					\$('#parentVerticalTab' + i).easyResponsiveTabs({
						type: 'vertical', //Types: default, vertical, accordion
						width: 'auto', //auto or any width like 600px
						fit: true, // 100% fit in a container
						closed: 'accordion', // Start closed if in accordion view
						tabidentify: 'hor_' + i, // The tab groups identifier
						activate: function(event) { // Callback function if tab is switched
							var \$tab = \$(this);
							var \$info = \$('#nested-tabInfo2');
							var \$name = \$('span', \$info);
							\$name.text(\$tab.text());
							\$info.show();
						}
					});
				}
			});

		window.onload=function(){ 
			\$('.jumpto-first').css('max-height', (\$(window).height()*0.98 - 48) + 'px');
			\$('.jumpto-first').niceScroll({cursoropacitymax:0.5,cursorwidth:"6px",cursorborder:"0px"});
		} 

			/****表格悬浮显示全部内容****/
			function messshow (info) {
			var str='<div class="topBg"><div class="toppicBox"><div class="inBox" style="text-align:center;"><br><textarea class="pinfo" cols=56>'+info+'</textarea><br><br></div><img class="topClose" width="27" height="27" src="image/topclose.png" onclick="topclose()"></div></div>';
				  \$("body").append(str);}

			function topclose(){
			\$(".topBg").remove();
			}

			\$(function(){
				\$(".abbrTab").each(function(){
				var len=\$(this).attr("data");
				var mess=\$(this).text();
				\$(this).attr("title",mess);
				if(mess.length>len-1){
				mess=mess.substring(0,len-1);
				mess +='<span class="brief">...</span>';
			}
				\$(this).html(mess);

				});

				\$(".brief").click(function(){
				var info=\$(this).parent().attr("title");
				  messshow (info);
				 });
				
				\$(".func_table").DataTable({"ordering": false,"scrollX": true} );
			});
			
			\$('.hl_table tr').has('td').each(function(){
				\$(this).attr('onmouseover', 'this.style.backgroundColor = "#DDDDDD"');
				\$(this).attr('onmouseout', 'this.style.backgroundColor = "#FFFFFF"');
			});
			
			\$('.func_table tr').has('td').each(function(){
				\$(this).attr('onmouseover', 'this.style.backgroundColor = "#DDDDDD"');
				\$(this).attr('onmouseout', 'this.style.backgroundColor = "#FFFFFF"');
			});
			
			\$(".logo").click(function(){\$(window).scrollTop(0);});

			var width = \$('.func_table:eq(0)').parents('section').width()
				\$(".func_table caption").css('width',width);
				\$(".func_table").parents('.dataTables_scrollBody').scroll(function(){
				\$(this).parent().find('caption').css('margin-left',\$(this).scrollLeft());
			});
		</script>
	</body>
</html>	
HTML

	return $tail;
}


#-------------------------------------------------------------------------------
#  the packaged section
#-------------------------------------------------------------------------------
# for the sequencing stat, resd the filter_fq result to create the html 
sub seq_stat
{
	my ($class,%opts) = @_;
	my $outdir = $class->{path}->{outdir};
	
	# fetch the filter_fq result dir which must be defined 
	my $dir = $opts{'-dir'} or ERROR("-dir must be defined in function <seq_stat>");
	my @stat_files = glob("$outdir/$dir/*.stat");
	my @samples = $opts{'-samples'} ? @{$opts{'-samples'}} : fetch_samples(@stat_files);

	my $section = $class->section(id=>"seq_stat",-page_head=>1);
	
	$section->menu("测序评估",-help=>"seq_stat.html");
	$section->submenu("测序质量评估",-help=>"seq_stat.html#sub_1");
	my @pies = map { "../$dir/$_.readsClass.png" } @samples;
	$section->imgs2html(-files=>\@pies,-names=>\@samples);
	
	$section->submenu("碱基组成与质量分析",-help=>"seq_stat.html#sub_3");
	my @images1 = map { "../$dir/${_}_clean.old.png" } @samples;
	my @images2 = map { "../$dir/${_}_clean.new.png" } @samples;
	my @desc1 = map { qq(样品 <span class="sample_lab_strong">$_</span> <span class="pic_table_strong">过滤前</span> 碱基组成分布图) } @samples;
	my @desc2 = map { qq(样品 <span class="sample_lab_strong">$_</span> <span class="pic_table_strong">过滤后</span> 碱基组成分布图) } @samples;
	$section->imgs2html2(-files1=>\@images1,-files2=>\@images2,-names=>\@samples,-desc1=>\@desc1,-desc2=>\@desc2);
	
	$section->submenu("过滤信息统计");
	my $stat = $class->stat_reads(@stat_files);
	$section->add_html($stat);
	
	return $section;
}

sub stat_reads
{
	my $class = shift;
	my @files = @_;
	my $html = "";
	
	my $reads_stat_line1;
	my $reads_stat_line2;
	foreach my $file (@files)
	{
		my $sample = basename($file);
		$sample = $1 if ($sample =~ /(.+)_clean.stat/);
		my $flag = 0;
		my %useful;
		open IN, "$file" or die $!;
		while (my $line = <IN>)
		{
			chomp $line;
			$flag = 1 if ($line =~ /^after\ filter/);
            $flag = 2 if ($line =~ /^filter\ step\ info/);
			my @data = split /\s+/,$line;
            if (0 == $flag){
				if ($line =~ /^total\s+reads\s+nt/){
					$useful{b_r_n} = $data[3];
                }
				if ($line =~ /^total\s+reads\s+\d+/){
					$useful{b_r} = $data[3]+$data[4];
				}
				if ($line =~ /^max\/min\s+len/){
					$useful{len} = $data[2];
				}
				if ($line =~ /^Q20\s+number/){
					$useful{b_q20_n} = $data[2];
				}
				if ($line =~ /^Q20\s+percentage/){
					$useful{b_q20_p} = $data[2];
				}
				if ($line =~ /^Q30\s+number/){
					$useful{b_q30_n} = $data[2];
				}
				if ($line =~ /^Q30\s+percentage/){
					$useful{b_q30_p} = $data[2];
				}
				if ($line =~ /^N\s+number/){
					$useful{b_N_n} = $data[2];
				}
				if ($line =~ /^N\s+percentage/){
					$useful{b_N_p} = $data[2];
				}
				if ($line =~ /^GC\s+number/){
					$useful{b_GC_n} = $data[2];
				}
				if ($line =~ /^GC\s+percentage/){
					$useful{b_GC_p} = $data[2];
				}
            }elsif (2 == $flag){
				if ($line =~ /^clean\s+reads/){
					$useful{c_r_p} = $data[-1];
                }
				if ($line =~ /filter\s+adapter/){
					$useful{adp_n} = $data[-2]+$data[-4];
                    $data[-1] =~ s/\%$//;
					$data[-3] =~ s/\%$//;
					$useful{adp_p} = $data[-1];
					$useful{adp_p} .= "%";
					$useful{adp_p} = "(".$useful{adp_p}.")";
				}
				if ($line =~ /low\s+quality/){
					$useful{lq_n} = $data[-2];
					$useful{lq_p} = "($data[-1])";
                }
				if ($line =~ /poly\s+A/){
					if($line =~ /\<yes\/no\>\ \:\ yes/){
						$useful{pla_n} = $data[-2];
						$useful{pla_p} = "($data[-1])";
                    }else{
						$useful{pla_n} = "0";
						$useful{pla_p} = "(0%)";
					}
				}
				if ($line =~ /filter\s+N/){
					$useful{fN_n} = $data[-2];
					$useful{fN_p} = $data[-1];
				}
            }else{
				if ($line =~ /^total\s+reads\s+nt/){
					$useful{a_r_n} = $data[3];
                }
				if ($line =~ /^total\s+reads\s+\d+/){
					$useful{a_r} = $data[3]+$data[4];
                }
				if ($line =~ /^Q20\s+number/){
					$useful{a_q20_n} = $data[2];
				}
				if ($line =~ /^Q20\s+percentage/){
					$useful{a_q20_p} = $data[2];
				}
				if ($line =~ /^Q30\s+number/){
					$useful{a_q30_n} = $data[2];
				}
				if ($line =~ /^Q30\s+percentage/){
					$useful{a_q30_p} = $data[2];
				}
				if ($line =~ /^N\s+number/){
					$useful{a_N_n} = $data[2];
				}
				if ($line =~ /^N\s+percentage/){
					$useful{a_N_p} = $data[2];
				}
				if ($line =~ /^GC\s+number/){
					$useful{a_GC_n} = $data[2];
				}
				if ($line =~ /^GC\s+percentage/){
					$useful{a_GC_p} = $data[2];
				}
			}	
		}
		close IN;
		
		$useful{b_r_p} = "100.00%";
		$useful{a_r_p} = ($useful{a_r_n} / $useful{b_r_n}) * 100;
		$useful{a_r_p} = sprintf("%.2f%%", $useful{a_r_p});
		
		$reads_stat_line1 .= <<TEMP;
				<tr><td>$sample</td><td> $useful{b_r_n} ($useful{b_r_p}) </td><td> $useful{b_q20_n} ($useful{b_q20_p}) </td><td> $useful{b_q30_n} ($useful{b_q30_p}) </td><td> $useful{b_N_n} ($useful{b_N_p}) </td><td> $useful{b_GC_n} ($useful{b_GC_p}) </td><td> $useful{a_r_n} ($useful{a_r_p}) </td><td> $useful{a_q20_n} ($useful{a_q20_p}) </td><td> $useful{a_q30_n} ($useful{a_q30_p}) </td><td> $useful{a_N_n} ($useful{a_N_p}) </td><td> $useful{a_GC_n} ($useful{a_GC_p}) </td></tr>
TEMP
        
        $reads_stat_line2 .= <<TEMP;
				<tr><td>$sample</td><td> $useful{b_r} </td><td> $useful{a_r} ($useful{c_r_p}) </td><td> $useful{len} </td><td> $useful{adp_n} $useful{adp_p} </td><td> $useful{lq_n} $useful{lq_p} </td><td> $useful{pla_n} $useful{pla_p} </td><td> $useful{fN_n} ($useful{fN_p}) </td></tr>
TEMP
	}
	
	$class->{tab_cnt} ++;
	my $order1 = "Tab $class->{menu_cnt}-$class->{submenu_cnt}-$class->{tab_cnt}";
	$class->{tab_cnt} ++;
	my $order2 = "Tab $class->{menu_cnt}-$class->{submenu_cnt}-$class->{tab_cnt}";

	$html .= <<HTML_cont;
				<table class="hl_table">
					<caption>$order1 过滤前后碱基信息统计表<a href="doc/seq_stat.html#sub_4_1" target="help_page" onclick="show_help();"><img src="image/help.png" class="help_logo"></a></caption>
					<tr><th rowspan=2>Sample</th><th colspan=5>Before Filter</th><th colspan=5>After Filter</th></tr>
					<tr><th>Clean Data(bp)</th><th>Q20(%)</th><th>Q30(%)</th><th>N(%)</th><th>GC(%)</th><th>HQ Clean Data(bp)</th><th>Q20(%)</th><th>Q30(%)</th><th>N(%)</th><th>GC(%)</th></tr>
$reads_stat_line1
				</table>
				
				<p><br /></p>
				
				<table class="hl_table">
					<caption>$order2 Reads 过滤信息统计表<a href="doc/seq_stat.html#sub_4_2" target="help_page" onclick="show_help();"><img src="image/help.png" class="help_logo"></a></caption>
					<tr><th>Sample</th><th>Clean Reads Num</th><th>HQ Clean Reads Num(%)</th><th>Read Length</th><th>Adapter(%)</th><th>Low Quality(%)</th><th>Poly A(%)</th><th>N(%)</th></tr>
$reads_stat_line2
				</table>
<br />
			</section>
HTML_cont
	
	return $html;
}

sub fetch_samples
{
	my @files = @_;

	my @samples = map 
	{
		my $fname = basename($_);
		my $sname;
		
		if ($fname =~ /(.+)_clean\.stat/)
		{
			$sname = $1;
		}
		elsif ($fname =~ /(.+)\.stat/)
		{
			$sname = $1;
		}
		else 
		{
			WARN("your read stat file name is not support now, [$fname]");
		}

		$sname;
	} @files;
	
	return @samples;
}
